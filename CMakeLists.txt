cmake_minimum_required(VERSION 3.26)
project(uCTest)

# ====================================================================
option(ENABLE_SANITIZERS "Enable sanitizers(only works with gcc & clang on Unix)" OFF)
option(UC_FAIL_FAST "Stop the execution of the test cases after the first error" OFF)
option(USE_PRINTF "Use printf function for logging" ON)
option(BUILD_DEMO "Build the demo project" OFF)

# ====================================================================
add_library(${PROJECT_NAME} INTERFACE)
add_library(orbitcowboy::${PROJECT_NAME} ALIAS ${PROJECT_NAME})
target_include_directories(${PROJECT_NAME} INTERFACE include)
target_compile_features(${PROJECT_NAME} INTERFACE cxx_std_11)

# ====================================================================
if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang" AND NOT MINGW)
    target_compile_options(${PROJECT_NAME} INTERFACE -Wall -Wextra -Wpedantic)
    if (ENABLE_SANITIZERS)
        target_compile_options(${PROJECT_NAME} INTERFACE -fsanitize=address,undefined)
        target_link_options(${PROJECT_NAME} INTERFACE -fsanitize=address,undefined)
    endif()
elseif(MSVC)
    target_compile_options(${PROJECT_NAME} INTERFACE /W4)
endif()
if (UC_FAIL_FAST)
    target_compile_definitions(${PROJECT_NAME} INTERFACE UC_FAIL_FAST)
endif()
if (USE_PRINTF)
    target_compile_definitions(${PROJECT_NAME} INTERFACE USE_PRINTF)
endif()
if (BUILD_DEMO)
    enable_testing()
    add_executable(${PROJECT_NAME}Demo src/uCTestDemo.c)
    target_link_libraries(${PROJECT_NAME}Demo PRIVATE ${PROJECT_NAME})
    add_test(NAME ${PROJECT_NAME}Demo COMMAND ${PROJECT_NAME}Demo)
endif()
